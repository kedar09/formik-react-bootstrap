{"ast":null,"code":"var _jsxFileName = \"/home/httpskedar/WebstormProjects/ReactJs/GITHUB/new/formik-react-bootstrap/src/pages/Home-Page/HomePage.js\";\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Card, Col, Row, Button } from \"react-bootstrap\";\nimport \"./home-page.css\";\nimport { getAllUserService, addUserService, deleteUserService, updateUserService } from \"../../services/Home-Page/homepage.service\";\nimport swal from \"sweetalert\";\nimport UserList from \"../../components/User-List/UserList\";\nimport { useTranslation } from \"react-i18next\";\n\nconst HomePage = () => {\n  const [state, setState] = useState({\n    userInfoId: \"\",\n    name: \"\",\n    address: \"\",\n    dateOfBirth: \"\",\n    mobileNumber: \"\",\n    userList: []\n  });\n  const [loading, setLoading] = useState(true);\n  const {\n    t: translation\n  } = useTranslation(\"common\");\n\n  const handleChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const refreshState = () => {\n    setState({ ...state,\n      userInfoId: \"\",\n      name: \"\",\n      address: \"\",\n      dateOfBirth: \"\",\n      mobileNumber: \"\"\n    });\n  };\n\n  const updateUser = () => {\n    let userData = {\n      userInfoId: state.userInfoId,\n      name: state.name,\n      address: state.address,\n      dateOfBirth: state.dateOfBirth,\n      mobileNumber: state.mobileNumber\n    };\n    updateUserService(userData).then(res => {\n      // console.log(res);\n      if (res && res.status === 200) {\n        setLoading(true);\n        swal({\n          icon: \"success\",\n          button: false,\n          title: \"Updated!\",\n          text: res.data.message,\n          timer: 2000\n        });\n        refreshState();\n      } else {\n        swal({\n          icon: \"error\",\n          button: false,\n          title: \"Something Wrong!\",\n          text: \"Please try again later!\",\n          timer: 2000\n        });\n      }\n    });\n  };\n\n  const deleteUser = userInfoId => {\n    deleteUserService(userInfoId).then(res => {\n      console.log(res);\n\n      if (res && res.status === 200) {\n        setLoading(true);\n        swal({\n          icon: \"success\",\n          button: false,\n          title: \"Deleted!\",\n          text: res.data.message,\n          timer: 2000\n        });\n        refreshState();\n      } else {\n        swal({\n          icon: \"error\",\n          button: false,\n          title: \"Something Wrong!\",\n          text: \"Please try again later!\",\n          timer: 2000\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllUserService().then(res => {\n      console.log(res);\n      setLoading(false);\n      const userList = res;\n      setState({ ...state,\n        userList\n      });\n    });\n  }, [loading]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, translation(\"userPage.userFormCardTitle\")), /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: state,\n    validationSchema: Yup.object().shape({\n      name: Yup.string().min(1, \"Name must be at least 3 characters\").max(100, \"Name max 100 characters\").required(\"Name is required\"),\n      address: Yup.string().min(1, \"Address must be at least 3 characters\").max(100, \"Address max 100 characters\").required(\"Address is required\"),\n      dateOfBirth: Yup.date().required(\"Date Of Birth is required\"),\n      mobileNumber: Yup.number().typeError(\"Doesn't seems like mobile number\").positive(\"Mobile Number can't start with a minus\").integer(\"Mobile Number can't include decimal number\").min(6999999999, \"Enter valid mobile number\").max(9999999999, \"Enter valid mobile number\").required(\"Mobile Number is required\")\n    }),\n    onSubmit: values => {\n      let userData = {\n        name: values.name,\n        address: values.address,\n        dateOfBirth: values.dateOfBirth,\n        mobileNumber: values.mobileNumber\n      };\n      addUserService(userData).then(res => {\n        // console.log(res);\n        if (res && res.status === 201) {\n          setLoading(true);\n          swal({\n            icon: \"success\",\n            button: false,\n            title: \"Added!\",\n            text: res.data.message,\n            timer: 2000\n          });\n          refreshState();\n        } else {\n          swal({\n            icon: \"error\",\n            button: false,\n            title: \"Something Wrong!\",\n            text: \"Please try again later!\",\n            timer: 2000\n          });\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    className: \"formPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formPlaintextName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    className: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, translation(\"userPage.nameLabel\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: translation(\"userPage.namePlaceholder\"),\n    value: props.values.name,\n    onChange: props.handleChange && handleChange,\n    onBlur: props.handleBlur,\n    isInvalid: props.errors.name && props.touched.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, props.errors.name))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formPlaintextAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    className: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, translation(\"userPage.addressLabel\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"address\",\n    placeholder: translation(\"userPage.addressPlaceholder\"),\n    value: props.values.address,\n    onChange: props.handleChange && handleChange,\n    onBlur: props.handleBlur,\n    isInvalid: props.errors.address && props.touched.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, props.errors.address))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formPlaintextDateOfBirth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    className: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, translation(\"userPage.dateLabel\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"date\",\n    name: \"dateOfBirth\",\n    placeholder: \"YYYY-MM-DD\",\n    value: props.values.dateOfBirth,\n    onChange: props.handleChange && handleChange,\n    onBlur: props.handleBlur,\n    isInvalid: props.errors.dateOfBirth && props.touched.dateOfBirth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }, props.errors.dateOfBirth))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formPlaintextMobileNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    className: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, translation(\"userPage.mobileNoLabel\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"tel\",\n    name: \"mobileNumber\",\n    placeholder: translation(\"userPage.mobileNoPlaceholder\"),\n    value: props.values.mobileNumber,\n    onChange: props.handleChange && handleChange,\n    onBlur: props.handleBlur,\n    isInvalid: props.errors.mobileNumber && props.touched.mobileNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, props.errors.mobileNumber))), state.userInfoId === \"\" ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, translation(\"userPage.addUserButton\")) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: updateUser,\n    className: \"updateButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, translation(\"userPage.updateUserButton\"), \" \"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: () => {\n      refreshState();\n    },\n    className: \"updateButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, translation(\"userPage.cancelButton\"), \" \")))), /*#__PURE__*/React.createElement(UserList, {\n    state: state,\n    setState: setState,\n    deleteUser: deleteUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/home/httpskedar/WebstormProjects/ReactJs/GITHUB/new/formik-react-bootstrap/src/pages/Home-Page/HomePage.js"],"names":["React","useState","useEffect","Formik","Yup","Form","Card","Col","Row","Button","getAllUserService","addUserService","deleteUserService","updateUserService","swal","UserList","useTranslation","HomePage","state","setState","userInfoId","name","address","dateOfBirth","mobileNumber","userList","loading","setLoading","t","translation","handleChange","e","target","value","refreshState","updateUser","userData","then","res","status","icon","button","title","text","data","message","timer","deleteUser","console","log","object","shape","string","min","max","required","date","number","typeError","positive","integer","values","props","handleSubmit","handleBlur","errors","touched"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Card, Col, Row, Button } from \"react-bootstrap\";\nimport \"./home-page.css\";\n\nimport {\n  getAllUserService,\n  addUserService,\n  deleteUserService,\n  updateUserService,\n} from \"../../services/Home-Page/homepage.service\";\nimport swal from \"sweetalert\";\nimport UserList from \"../../components/User-List/UserList\";\nimport { useTranslation } from \"react-i18next\";\n\nconst HomePage = () => {\n  const [state, setState] = useState({\n    userInfoId: \"\",\n    name: \"\",\n    address: \"\",\n    dateOfBirth: \"\",\n    mobileNumber: \"\",\n    userList: [],\n  });\n  const [loading, setLoading] = useState(true);\n  const { t: translation } = useTranslation(\"common\");\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const refreshState = () => {\n    setState({\n      ...state,\n      userInfoId: \"\",\n      name: \"\",\n      address: \"\",\n      dateOfBirth: \"\",\n      mobileNumber: \"\",\n    });\n  };\n\n  const updateUser = () => {\n    let userData = {\n      userInfoId: state.userInfoId,\n      name: state.name,\n      address: state.address,\n      dateOfBirth: state.dateOfBirth,\n      mobileNumber: state.mobileNumber,\n    };\n    updateUserService(userData).then((res) => {\n      // console.log(res);\n      if (res && res.status === 200) {\n        setLoading(true);\n        swal({\n          icon: \"success\",\n          button: false,\n          title: \"Updated!\",\n          text: res.data.message,\n          timer: 2000,\n        });\n        refreshState();\n      } else {\n        swal({\n          icon: \"error\",\n          button: false,\n          title: \"Something Wrong!\",\n          text: \"Please try again later!\",\n          timer: 2000,\n        });\n      }\n    });\n  };\n\n  const deleteUser = (userInfoId) => {\n    deleteUserService(userInfoId).then((res) => {\n      console.log(res);\n      if (res && res.status === 200) {\n        setLoading(true);\n        swal({\n          icon: \"success\",\n          button: false,\n          title: \"Deleted!\",\n          text: res.data.message,\n          timer: 2000,\n        });\n        refreshState();\n      } else {\n        swal({\n          icon: \"error\",\n          button: false,\n          title: \"Something Wrong!\",\n          text: \"Please try again later!\",\n          timer: 2000,\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllUserService().then((res) => {\n      console.log(res);\n      setLoading(false);\n      const userList = res;\n      setState({ ...state, userList });\n    });\n  }, [loading]);\n\n  return (\n    <div className=\"divPage\">\n      <Card>\n        <Card.Header className=\"text-center\">\n          {translation(\"userPage.userFormCardTitle\")}\n        </Card.Header>\n        <Formik\n          enableReinitialize={true}\n          initialValues={state}\n          validationSchema={Yup.object().shape({\n            name: Yup.string()\n              .min(1, \"Name must be at least 3 characters\")\n              .max(100, \"Name max 100 characters\")\n              .required(\"Name is required\"),\n            address: Yup.string()\n              .min(1, \"Address must be at least 3 characters\")\n              .max(100, \"Address max 100 characters\")\n              .required(\"Address is required\"),\n            dateOfBirth: Yup.date().required(\"Date Of Birth is required\"),\n            mobileNumber: Yup.number()\n              .typeError(\"Doesn't seems like mobile number\")\n              .positive(\"Mobile Number can't start with a minus\")\n              .integer(\"Mobile Number can't include decimal number\")\n              .min(6999999999, \"Enter valid mobile number\")\n              .max(9999999999, \"Enter valid mobile number\")\n              .required(\"Mobile Number is required\"),\n          })}\n          onSubmit={(values) => {\n            let userData = {\n              name: values.name,\n              address: values.address,\n              dateOfBirth: values.dateOfBirth,\n              mobileNumber: values.mobileNumber,\n            };\n            addUserService(userData).then((res) => {\n              // console.log(res);\n              if (res && res.status === 201) {\n                setLoading(true);\n                swal({\n                  icon: \"success\",\n                  button: false,\n                  title: \"Added!\",\n                  text: res.data.message,\n                  timer: 2000,\n                });\n                refreshState();\n              } else {\n                swal({\n                  icon: \"error\",\n                  button: false,\n                  title: \"Something Wrong!\",\n                  text: \"Please try again later!\",\n                  timer: 2000,\n                });\n              }\n            });\n          }}\n        >\n          {(props) => (\n            <Form onSubmit={props.handleSubmit} className=\"formPage\">\n              <Form.Group as={Row} controlId=\"formPlaintextName\">\n                <Form.Label column sm=\"2\" className=\"formLabel\">\n                  {translation(\"userPage.nameLabel\")}\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder={translation(\"userPage.namePlaceholder\")}\n                    value={props.values.name}\n                    onChange={props.handleChange && handleChange}\n                    onBlur={props.handleBlur}\n                    isInvalid={props.errors.name && props.touched.name}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {props.errors.name}\n                  </Form.Control.Feedback>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formPlaintextAddress\">\n                <Form.Label column sm=\"2\" className=\"formLabel\">\n                  {translation(\"userPage.addressLabel\")}\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"address\"\n                    placeholder={translation(\"userPage.addressPlaceholder\")}\n                    value={props.values.address}\n                    onChange={props.handleChange && handleChange}\n                    onBlur={props.handleBlur}\n                    isInvalid={props.errors.address && props.touched.address}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {props.errors.address}\n                  </Form.Control.Feedback>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formPlaintextDateOfBirth\">\n                <Form.Label column sm=\"2\" className=\"formLabel\">\n                  {translation(\"userPage.dateLabel\")}\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"date\"\n                    name=\"dateOfBirth\"\n                    placeholder=\"YYYY-MM-DD\"\n                    value={props.values.dateOfBirth}\n                    onChange={props.handleChange && handleChange}\n                    onBlur={props.handleBlur}\n                    isInvalid={\n                      props.errors.dateOfBirth && props.touched.dateOfBirth\n                    }\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {props.errors.dateOfBirth}\n                  </Form.Control.Feedback>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formPlaintextMobileNumber\">\n                <Form.Label column sm=\"2\" className=\"formLabel\">\n                  {translation(\"userPage.mobileNoLabel\")}\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"tel\"\n                    name=\"mobileNumber\"\n                    placeholder={translation(\"userPage.mobileNoPlaceholder\")}\n                    value={props.values.mobileNumber}\n                    onChange={props.handleChange && handleChange}\n                    onBlur={props.handleBlur}\n                    isInvalid={\n                      props.errors.mobileNumber && props.touched.mobileNumber\n                    }\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {props.errors.mobileNumber}\n                  </Form.Control.Feedback>\n                </Col>\n              </Form.Group>\n              {state.userInfoId === \"\" ? (\n                <Button variant=\"primary\" type=\"submit\">\n                  {translation(\"userPage.addUserButton\")}\n                </Button>\n              ) : (\n                <Button\n                  variant=\"primary\"\n                  onClick={updateUser}\n                  className=\"updateButton\"\n                >\n                  {translation(\"userPage.updateUserButton\")}{\" \"}\n                </Button>\n              )}\n              <Button\n                variant=\"secondary\"\n                onClick={() => {\n                  refreshState();\n                }}\n                className=\"updateButton\"\n              >\n                {translation(\"userPage.cancelButton\")}{\" \"}\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Card>\n      <UserList state={state} setState={setState} deleteUser={deleteUser} />\n    </div>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}
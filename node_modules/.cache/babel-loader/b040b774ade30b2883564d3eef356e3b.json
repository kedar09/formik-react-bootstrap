{"ast":null,"code":"var _jsxFileName = \"/home/httpskedar/WebstormProjects/ReactJs/GITHUB/new/formik-react-bootstrap/src/pages/Home-Page/HomePage.js\";\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Card, Col, Row, Button } from \"react-bootstrap\";\nimport \"./home-page.css\";\nimport { getAllUserService, addUserService, deleteUserService, updateUserService } from \"../../services/Home-Page/homepage.service\";\nimport swal from \"sweetalert\";\nimport UserList from \"../../components/User-List/UserList\";\n\nconst HomePage = () => {\n  const [state, setState] = useState({\n    userInfoId: \"\",\n    name: \"\",\n    address: \"\",\n    dateOfBirth: \"\",\n    mobileNumber: \"\",\n    userList: []\n  });\n  const [loading, setLoading] = useState(true);\n\n  const handleChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const refreshState = () => {\n    setState({ ...state,\n      userInfoId: \"\",\n      name: \"\",\n      address: \"\",\n      dateOfBirth: \"\",\n      mobileNumber: \"\"\n    });\n  };\n\n  const updateUser = () => {\n    let userData = {\n      userInfoId: state.userInfoId,\n      name: state.name,\n      address: state.address,\n      dateOfBirth: state.dateOfBirth,\n      mobileNumber: state.mobileNumber\n    };\n    updateUserService(userData).then(res => {\n      console.log(res);\n\n      if (res && res.status === 200) {\n        setLoading(true);\n        swal({\n          icon: \"success\",\n          button: false,\n          title: \"Updated!\",\n          text: res.data.message,\n          timer: 2000\n        });\n        refreshState();\n      } else if (res && res.status === 400) {\n        swal({\n          icon: \"waring\",\n          button: false,\n          title: \"Bad request!\",\n          text: \"Please try again later!\",\n          timer: 2000\n        });\n      } else {\n        swal({\n          icon: \"error\",\n          button: false,\n          title: \"Something Wrong!\",\n          text: \"Please try again later!\",\n          timer: 2000\n        });\n      }\n    });\n  };\n\n  const deleteUser = userInfoId => {\n    deleteUserService(userInfoId).then(res => {\n      setLoading(true);\n      swal({\n        icon: \"success\",\n        button: false,\n        title: \"Deleted!\",\n        timer: 2000\n      });\n    });\n  };\n\n  useEffect(() => {\n    getAllUserService().then(res => {\n      console.log(res);\n      setLoading(false);\n      const userList = res;\n      setState({ ...state,\n        userList\n      });\n    });\n  }, [loading]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"React-Formik-React_Bootstrap-NodeJs-Mysql\"), /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: state,\n    validationSchema: Yup.object().shape({\n      name: Yup.string().min(1, \"Name must be at least 3 characters\").max(100, \"Name max 100 characters\").required(\"Name is required\"),\n      address: Yup.string().min(1, \"Address must be at least 3 characters\").max(100, \"Address max 100 characters\").required(\"Address is required\"),\n      dateOfBirth: Yup.date().required(\"Date Of Birth is required\"),\n      mobileNumber: Yup.number().positive(\"Phone number can't start with a minus\").integer(\"Phone number can't include a decimal point\").required(\"Phone Number is required\")\n    }),\n    onSubmit: values => {\n      let userData = {\n        name: values.name,\n        address: values.address,\n        dateOfBirth: values.dateOfBirth,\n        mobileNumber: values.mobileNumber\n      };\n      addUserService(userData).then(res => {\n        setLoading(true);\n        swal({\n          icon: \"success\",\n          button: false,\n          title: \"Added!\",\n          timer: 2000\n        });\n        refreshState();\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    className: \"formPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formPlaintextName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    className: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Col, {\n    sm: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Name\",\n    value: props.values.name,\n    onChange: props.handleChange && handleChange,\n    onBlur: props.handleBlur,\n    isInvalid: props.errors.name && props.touched.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, props.errors.name))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formPlaintextAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    className: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Col, {\n    sm: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"address\",\n    placeholder: \"Address\",\n    value: props.values.address,\n    onChange: props.handleChange && handleChange,\n    onBlur: props.handleBlur,\n    isInvalid: props.errors.address && props.touched.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, props.errors.address))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formPlaintextDateOfBirth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    className: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, \"Date Of Birth\"), /*#__PURE__*/React.createElement(Col, {\n    sm: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"date\",\n    name: \"dateOfBirth\",\n    placeholder: \"YYYY-MM-DD\",\n    value: props.values.dateOfBirth,\n    onChange: props.handleChange && handleChange,\n    onBlur: props.handleBlur,\n    isInvalid: props.errors.dateOfBirth && props.touched.dateOfBirth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, props.errors.dateOfBirth))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formPlaintextMobileNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    className: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, \"Mobile Number\"), /*#__PURE__*/React.createElement(Col, {\n    sm: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"tel\",\n    name: \"mobileNumber\",\n    placeholder: \"Mobile Number\",\n    value: props.values.mobileNumber,\n    onChange: props.handleChange && handleChange,\n    onBlur: props.handleBlur,\n    isInvalid: props.errors.mobileNumber && props.touched.mobileNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }, props.errors.mobileNumber))), state.userInfoId === \"\" ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"Add User\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: updateUser,\n    className: \"updateButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, \"Update User\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: () => {\n      refreshState();\n    },\n    className: \"updateButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, \"Cancel\")))), /*#__PURE__*/React.createElement(UserList, {\n    state: state,\n    setState: setState,\n    deleteUser: deleteUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/home/httpskedar/WebstormProjects/ReactJs/GITHUB/new/formik-react-bootstrap/src/pages/Home-Page/HomePage.js"],"names":["React","useState","useEffect","Formik","Yup","Form","Card","Col","Row","Button","getAllUserService","addUserService","deleteUserService","updateUserService","swal","UserList","HomePage","state","setState","userInfoId","name","address","dateOfBirth","mobileNumber","userList","loading","setLoading","handleChange","e","target","value","refreshState","updateUser","userData","then","res","console","log","status","icon","button","title","text","data","message","timer","deleteUser","object","shape","string","min","max","required","date","number","positive","integer","values","props","handleSubmit","handleBlur","errors","touched"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Card, Col, Row, Button } from \"react-bootstrap\";\nimport \"./home-page.css\";\n\nimport {\n  getAllUserService,\n  addUserService,\n  deleteUserService,\n  updateUserService,\n} from \"../../services/Home-Page/homepage.service\";\nimport swal from \"sweetalert\";\nimport UserList from \"../../components/User-List/UserList\";\n\nconst HomePage = () => {\n  const [state, setState] = useState({\n    userInfoId: \"\",\n    name: \"\",\n    address: \"\",\n    dateOfBirth: \"\",\n    mobileNumber: \"\",\n    userList: [],\n  });\n  const [loading, setLoading] = useState(true);\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const refreshState = () => {\n    setState({\n      ...state,\n      userInfoId: \"\",\n      name: \"\",\n      address: \"\",\n      dateOfBirth: \"\",\n      mobileNumber: \"\",\n    });\n  };\n\n  const updateUser = () => {\n    let userData = {\n      userInfoId: state.userInfoId,\n      name: state.name,\n      address: state.address,\n      dateOfBirth: state.dateOfBirth,\n      mobileNumber: state.mobileNumber,\n    };\n    updateUserService(userData).then((res) => {\n      console.log(res);\n      if (res && res.status === 200) {\n        setLoading(true);\n        swal({\n          icon: \"success\",\n          button: false,\n          title: \"Updated!\",\n          text: res.data.message,\n          timer: 2000,\n        });\n        refreshState();\n      } else if (res && res.status === 400) {\n        swal({\n          icon: \"waring\",\n          button: false,\n          title: \"Bad request!\",\n          text: \"Please try again later!\",\n          timer: 2000,\n        });\n      } else {\n        swal({\n          icon: \"error\",\n          button: false,\n          title: \"Something Wrong!\",\n          text: \"Please try again later!\",\n          timer: 2000,\n        });\n      }\n    });\n  };\n\n  const deleteUser = (userInfoId) => {\n    deleteUserService(userInfoId).then((res) => {\n      setLoading(true);\n      swal({ icon: \"success\", button: false, title: \"Deleted!\", timer: 2000 });\n    });\n  };\n\n  useEffect(() => {\n    getAllUserService().then((res) => {\n      console.log(res);\n      setLoading(false);\n      const userList = res;\n      setState({ ...state, userList });\n    });\n  }, [loading]);\n\n  return (\n    <div className=\"divPage\">\n      <Card>\n        <Card.Header className=\"text-center\">\n          React-Formik-React_Bootstrap-NodeJs-Mysql\n        </Card.Header>\n        <Formik\n          enableReinitialize={true}\n          initialValues={state}\n          validationSchema={Yup.object().shape({\n            name: Yup.string()\n              .min(1, \"Name must be at least 3 characters\")\n              .max(100, \"Name max 100 characters\")\n              .required(\"Name is required\"),\n            address: Yup.string()\n              .min(1, \"Address must be at least 3 characters\")\n              .max(100, \"Address max 100 characters\")\n              .required(\"Address is required\"),\n            dateOfBirth: Yup.date().required(\"Date Of Birth is required\"),\n            mobileNumber: Yup.number()\n              .positive(\"Phone number can't start with a minus\")\n              .integer(\"Phone number can't include a decimal point\")\n              .required(\"Phone Number is required\"),\n          })}\n          onSubmit={(values) => {\n            let userData = {\n              name: values.name,\n              address: values.address,\n              dateOfBirth: values.dateOfBirth,\n              mobileNumber: values.mobileNumber,\n            };\n\n            addUserService(userData).then((res) => {\n              setLoading(true);\n              swal({\n                icon: \"success\",\n                button: false,\n                title: \"Added!\",\n                timer: 2000,\n              });\n              refreshState();\n            });\n          }}\n        >\n          {(props) => (\n            <Form onSubmit={props.handleSubmit} className=\"formPage\">\n              <Form.Group as={Row} controlId=\"formPlaintextName\">\n                <Form.Label column sm=\"2\" className=\"formLabel\">\n                  Name\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    value={props.values.name}\n                    onChange={props.handleChange && handleChange}\n                    onBlur={props.handleBlur}\n                    isInvalid={props.errors.name && props.touched.name}\n                  />\n\n                  <Form.Control.Feedback type=\"invalid\">\n                    {props.errors.name}\n                  </Form.Control.Feedback>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formPlaintextAddress\">\n                <Form.Label column sm=\"2\" className=\"formLabel\">\n                  Address\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"address\"\n                    placeholder=\"Address\"\n                    value={props.values.address}\n                    onChange={props.handleChange && handleChange}\n                    onBlur={props.handleBlur}\n                    isInvalid={props.errors.address && props.touched.address}\n                  />\n\n                  <Form.Control.Feedback type=\"invalid\">\n                    {props.errors.address}\n                  </Form.Control.Feedback>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formPlaintextDateOfBirth\">\n                <Form.Label column sm=\"2\" className=\"formLabel\">\n                  Date Of Birth\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"date\"\n                    name=\"dateOfBirth\"\n                    placeholder=\"YYYY-MM-DD\"\n                    value={props.values.dateOfBirth}\n                    onChange={props.handleChange && handleChange}\n                    onBlur={props.handleBlur}\n                    isInvalid={\n                      props.errors.dateOfBirth && props.touched.dateOfBirth\n                    }\n                  />\n\n                  <Form.Control.Feedback type=\"invalid\">\n                    {props.errors.dateOfBirth}\n                  </Form.Control.Feedback>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formPlaintextMobileNumber\">\n                <Form.Label column sm=\"2\" className=\"formLabel\">\n                  Mobile Number\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"tel\"\n                    name=\"mobileNumber\"\n                    placeholder=\"Mobile Number\"\n                    value={props.values.mobileNumber}\n                    onChange={props.handleChange && handleChange}\n                    onBlur={props.handleBlur}\n                    isInvalid={\n                      props.errors.mobileNumber && props.touched.mobileNumber\n                    }\n                  />\n\n                  <Form.Control.Feedback type=\"invalid\">\n                    {props.errors.mobileNumber}\n                  </Form.Control.Feedback>\n                </Col>\n              </Form.Group>\n              {state.userInfoId === \"\" ? (\n                <Button variant=\"primary\" type=\"submit\">\n                  Add User\n                </Button>\n              ) : (\n                <Button\n                  variant=\"primary\"\n                  onClick={updateUser}\n                  className=\"updateButton\"\n                >\n                  Update User\n                </Button>\n              )}\n\n              <Button\n                variant=\"secondary\"\n                onClick={() => {\n                  refreshState();\n                }}\n                className=\"updateButton\"\n              >\n                Cancel\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Card>\n      <UserList state={state} setState={setState} deleteUser={deleteUser} />\n    </div>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}